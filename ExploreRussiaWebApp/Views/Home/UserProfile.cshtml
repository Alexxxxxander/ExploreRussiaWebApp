@model ExploreRussia.Domain.Models.User

@{
    ViewData["Title"] = "Пользователь";
}

<div class="container mt-5" style="max-width: 800px; margin:0 auto;">
    <h2 class="text-center">Профиль</h2>
    <form asp-action="UpdateProfile" method="post" class="mt-4">
        <div class="form-group row">
            <label for="Email" class="col-sm-2 col-form-label">Email</label>
            <div class="col-sm-10">
                <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" required>
            </div>
        </div>
        <div class="form-group row">
            <label for="FirstName" class="col-sm-2 col-form-label">Имя</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="FirstName" name="FirstName" value="@Model.FirstName" required>
            </div>
        </div>
        <div class="form-group row">
            <label for="LastName" class="col-sm-2 col-form-label">Фамилия</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="LastName" name="LastName" value="@Model.LastName" required>
            </div>
        </div>
        <div class="form-group row">
            <label for="Phone" class="col-sm-2 col-form-label">Телефон</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="Phone" value="@Model.Phone" name="Phone">
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-10" style="margin: 0 auto;">
                <button type="submit" class="btn btn-primary w-100" style="max-width: 250px;">Сохранить изменения</button>
            </div>
        </div>
    </form>
</div>

<h3 class="mt-5 text-center">Мои заявки</h3>

<div class="order-filters mb-4 text-center">
    <input type="text" id="orderSearch" placeholder="Поиск по названию похода..." class="form-control mb-2" onkeyup="filterOrders()" style="max-width: 300px; display: inline-block;">
    <select id="orderStatusFilter" class="form-control" onchange="filterOrders()" style="max-width: 300px; display: inline-block;">
        <option value="">Все статусы</option>
        <option value="Pending">В ожидании</option>
        <option value="Confirmed">Подтверждено</option>
        <option value="Finished">Завершено</option>
        <option value="Canceled">Отменено</option>
    </select>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Поход</th>
            <th>Дата заявки</th>
            <th>Сумма</th>
            <th>Статус</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody id="ordersTable">
        @foreach (var order in Model.Orders.Where(x => x.Status != "Canceled").OrderByDescending(x => x.Status))
        {
            <tr class="order-item" data-tripname="@order.Trip.TripName" data-status="@order.Status">
                <td>@order.Trip.TripName</td>
                <td>@order.OrderDate.ToShortDateString()</td>
                <td>@order.TotalAmount</td>
                <td>@order.Status</td>
                <td>
                    @if (order.Status == "Pending")
                    {
                        <form asp-action="CancelOrder" method="post">
                            <input type="hidden" name="orderId" value="@order.Id" />
                            <button type="submit" class="btn btn-danger">Отменить</button>
                        </form>
                    }
                    @if (order.Status == "Finished")
                    {
                        <button type="button" class="btn btn-primary" onclick="openReviewModal(@order.Id)">Оставить отзыв</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="reviewModal" class="review-modal">
    <div class="review-modal-content">
        <span class="review-close" onclick="closeReviewModal()">&times;</span>
        <h2>Оставить отзыв</h2>
        <form asp-action="SubmitReview" method="post">
            <div class="form-group">
                <label for="Rating">Рейтинг</label>
                <select class="form-control" id="rating" name="rating" required>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                </select>
            </div>
            <div class="form-group">
                <label for="Comment">Комментарий</label>
                <textarea class="form-control" id="comment" name="comment" rows="3"></textarea>
            </div>
            <input type="hidden" id="tripId" name="tripId" />
            <input type="hidden" name="userId" value="@Model.Id" />
            <button type="submit" class="btn btn-primary">Отправить отзыв</button>
        </form>
    </div>
</div>

<script>
    function openReviewModal(orderId) {
        document.getElementById('tripId').value = orderId;
        document.getElementById('reviewModal').style.display = 'block';
    }

    function closeReviewModal() {
        document.getElementById('reviewModal').style.display = 'none';
    }

    // Закрытие модального окна при клике вне его
    window.onclick = function (event) {
        var modal = document.getElementById('reviewModal');
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    }

    function filterOrders() {
        const searchValue = document.getElementById('orderSearch').value.toLowerCase();
        const statusValue = document.getElementById('orderStatusFilter').value;

        const orders = document.querySelectorAll('.order-item');

        orders.forEach(order => {
            const tripName = order.getAttribute('data-tripname').toLowerCase();
            const status = order.getAttribute('data-status');

            let isVisible = true;

            if (searchValue && !tripName.includes(searchValue)) {
                isVisible = false;
            }

            if (statusValue && status !== statusValue) {
                isVisible = false;
            }

            order.style.display = isVisible ? '' : 'none';
        });
    }
</script>

<style>
    .review-modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    .review-modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
    }

    .review-close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .review-close:hover,
        .review-close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .order-filters {
        display: flex;
        justify-content: center;
        gap: 10px;
        flex-wrap: wrap;
    }

        .order-filters input,
        .order-filters select {
            max-width: 300px;
            height: 38px;
            line-height: 20px;
        }
</style>
