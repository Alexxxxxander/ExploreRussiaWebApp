@model IEnumerable<ExploreRussia.Domain.Models.Guide>

@{
    ViewData["Title"] = "Управление гидами";
}

<h1 class="text-center">@ViewData["Title"]</h1>

<div class="text-right mb-3">
    <a asp-action="Create" class="btn btn-primary">Добавить нового гида</a>
</div>

<div class="guide-search-container">
    <input type="text" id="guideSearchName" placeholder="Поиск по ФИО..." onkeyup="filterGuides()">
    <input type="number" id="guideExperienceFrom" placeholder="Опыт работы от..." onkeyup="filterGuides()" onchange="filterGuides()">
    <input type="number" id="guideExperienceTo" placeholder="Опыт работы до..." onkeyup="filterGuides()" onchange="filterGuides()">
</div>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Фамилия</th>
            <th>Имя</th>
            <th>Отчество</th>
            <th>Email</th>
            <th>Телефон</th>
            <th>Опыт работы</th>
            <th>Изображение</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody id="guidesTable">
        @foreach (var item in Model)
        {
            <tr class="guide-item" data-lastname="@item.LastName" data-firstname="@item.FirstName" data-patronymic="@item.Patronymic" data-experience="@item.ExperienceYears">
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.Patronymic)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                <td>@Html.DisplayFor(modelItem => item.ExperienceYears)</td>
                <td>
                    <img src="@item.ImageUrl" alt="@item.FirstName @item.LastName" class="img-thumbnail" style="max-width: 100px;" />
                </td>
                <td>
                    <div class="d-flex justify-content-between">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-secondary mx-1">Редактировать</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-secondary mx-1">Детали</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-secondary mx-1">Удалить</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function filterGuides() {
        const searchName = document.getElementById('guideSearchName').value.toLowerCase();
        const experienceFrom = parseFloat(document.getElementById('guideExperienceFrom').value);
        const experienceTo = parseFloat(document.getElementById('guideExperienceTo').value);

        const guides = document.querySelectorAll('.guide-item');

        guides.forEach(guide => {
            const lastName = guide.getAttribute('data-lastname').toLowerCase();
            const firstName = guide.getAttribute('data-firstname').toLowerCase();
            const patronymic = guide.getAttribute('data-patronymic') ? guide.getAttribute('data-patronymic').toLowerCase() : '';
            const experience = parseFloat(guide.getAttribute('data-experience'));

            let isVisible = true;

            if (searchName && !`${lastName} ${firstName} ${patronymic}`.includes(searchName)) {
                isVisible = false;
            }

            if (!isNaN(experienceFrom) && experience < experienceFrom) {
                isVisible = false;
            }

            if (!isNaN(experienceTo) && experience > experienceTo) {
                isVisible = false;
            }

            guide.style.display = isVisible ? '' : 'none';
        });
    }
</script>

<style>
    .guide-search-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 20px;
    }

        .guide-search-container input[type="text"],
        .guide-search-container input[type="number"] {
            padding: 12px 20px;
            border: 2px solid #0d6efd;
            border-radius: 50px;
            outline: none;
            font-size: 16px;
            flex: 1;
        }

            .guide-search-container input[type="text"]::placeholder,
            .guide-search-container input[type="number"]::placeholder {
                color: #999;
            }
</style>
